"use strict";

//Forecast slider
function setupForecastSlider(sliderSelector, itemSelector, buttonLeftSelector, buttonRightSelector, indexSlideScale) {
  var currentSlide = 0;
  var initialX = 0;
  var dragging = false;
  var carousel = document.querySelector(sliderSelector);
  var slides = document.querySelectorAll(itemSelector);
  var totalSlides = slides.length;
  function refreshCarousel() {
    slides.forEach(function (slide, index) {
      var offset = index - currentSlide;
      var slideTranslate = 50;
      // if (window.innerWidth <= 1100){
      //     slideTranslate = 47
      // }
      var newPosition = offset * slideTranslate;
      if (offset > totalSlides / 2) {
        newPosition -= totalSlides * slideTranslate;
      } else if (offset < -totalSlides / 2) {
        newPosition += totalSlides * slideTranslate;
      }
      var scale = index === currentSlide ? 1 : indexSlideScale;
      slide.style.transform = "translateX(".concat(newPosition, "%) scale(").concat(scale, ")");
      slide.style.zIndex = index === currentSlide ? 3 : 1;
      var isVisible = Math.abs(offset) <= 1 || index === 0 && currentSlide === totalSlides - 1 || index === totalSlides - 1 && currentSlide === 0;
      slide.classList.toggle('hidden', !isVisible);
      slide.classList.toggle('active', index === currentSlide);
      slide.classList.remove('left-slide', 'right-slide');
      if (offset === 1 || currentSlide === totalSlides - 1 && index === 0) {
        slide.classList.add('right-slide');
      } else if (offset === -1 || currentSlide === 0 && index === totalSlides - 1) {
        slide.classList.add('left-slide');
      }
    });
  }
  function shiftSlide(direction) {
    currentSlide = (currentSlide + direction + totalSlides) % totalSlides;
    refreshCarousel();
  }
  function handleDragStart(event) {
    dragging = true;
    initialX = event.clientX || event.touches[0].clientX;
  }
  function handleDragMove(event) {
    if (!dragging) return;
    var currentX = event.clientX || event.touches[0].clientX;
    var diffX = currentX - initialX;
    if (Math.abs(diffX) > 50) {
      shiftSlide(diffX > 0 ? -1 : 1);
      dragging = false;
    }
  }
  function handleDragEnd() {
    dragging = false;
  }
  var leftButtons = document.querySelectorAll(buttonLeftSelector);
  var rightButtons = document.querySelectorAll(buttonRightSelector);
  leftButtons.forEach(function (btn) {
    btn.addEventListener('click', function () {
      shiftSlide(-1);
    });
  });
  rightButtons.forEach(function (btn) {
    btn.addEventListener('click', function () {
      shiftSlide(1);
    });
  });
  carousel.addEventListener('mousedown', handleDragStart);
  carousel.addEventListener('touchstart', handleDragStart);
  document.addEventListener('mousemove', handleDragMove);
  document.addEventListener('touchmove', handleDragMove);
  document.addEventListener('mouseup', handleDragEnd);
  document.addEventListener('touchend', handleDragEnd);
  refreshCarousel();
}
setupForecastSlider('.videos__slider', '.videos__item', '.videos__control-left', '.videos__control-right', 0.56);
var sliderItems = document.querySelectorAll(".videos__item");
sliderItems.forEach(function (item, i) {
  var videoIframe = item.querySelector(".videoIframe");
  var videoPlayBtn = item.querySelector(".videoPlayBtn");
  var parentElement = videoIframe.parentElement;
  videoPlayBtn.addEventListener("click", function () {
    videoIframe.src = videoIframe.src + '&autoplay=1';
    videoIframe.style.display = "block";
    videoPlayBtn.style.display = "none";
    parentElement.style.border = "none";
  });
});
var blackBtn = document.querySelector(".dark-btn");
blackBtn.addEventListener("click", function () {
  document.body.classList.toggle("dark");
  document.body.classList.toggle("light");
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
